# A prospect is a person we will contact in order to make a sale.
# However the contact name can change frequently, so it is better to refer to the prospect by
# CIK or company name since that reference doesn't change.
# Perhaps prospect could have been broken up into Client/Company that has many prospects or contacts.
class Prospect < ActiveRecord::Base
  include Prospect::Search

  acts_as_ordered_taggable_on :tags

  has_paper_trail
  has_many :prospect_assignments
  has_many :users, :through => :prospect_assignments
  has_many :call_events, :class_name => "Event::Call"
  has_many :email_events, :class_name => "Event::Email"
  belongs_to :last_event, :polymorphic => true

  scope :by_priority, order("priority DESC")
  scope :filed_form4, where("form4_filings IS NOT NULL")
  scope :cold_caller_order, by_priority.order("form4_filings ASC, time_zone DESC")

  attr_accessible :contact_name, :contact_position, :contact_email,
                  :company_address, :filing_agent,
                  :phone_number, :fax_number,
                  :raw_cik, :ticker, :company_name, :emailable, :time_zone, :tag_list

  def ticker
    attributes[:ticker] || ""
  end

  MARKETFORMS_CIKS = ["0001406574", "0001332412", "0001145761", "0000000000", "0000000000", "0001406574", "0001332412", "0001145761"] 
  PRIMARY_DOC_CIKS = ["54473", "929351", "1313510", "1313510", "1065332", "4187", "911216", "1285819", "1285224", "1203900", "1287865", "1050007", "814585", "38725", "38725", "1334586", "797465", "858706", "749660", "822708", "1133470", "101063", "891532", "799698", "796505", "923284", "19745", "787075", "907242", "108985", "883107", "811532", "916459", "63296", "1366868", "84129", "84129", "1131312", "77281", "926617", "879101", "902622", "1279014", "1336691", "1489136", "1489136", "40417", "741516", "93451", "92679", "1 386067", "1210123", "1060392", "32621", "100726", "946644", "899751", "95953", "1292556", "61004", "1019361", "1009759", "1065034", "810829", "912752", "80172", "1373980", "724910", "1288359", "883948", "1358190", "1471824", "1023731", "844059", "1454124", "877422", "1053584", "886136", "882104", "1232582", "813298", "822411", "1363890", "1322652", "796534", "100493", "88121", "921691", "1032220", "701811", "1388686", "887546", "844789", "320174", "1108924", "921671", "1425292", "744187", "892222", "936528", "757011", "757011", "793547", "788329", "80035", "1283858", "1035443", "93676", "832101", "807863", "875357", "9346", "1056288", "719135", "25793", "909108", "933141", "704051", "93456", "1093691", "1084869", "22701", "892482", "766792", "803016", "1137083", "1024795", "842023", "1299033", "1045450", "1172358", "860731", "844143", "1492298", "1157817", "1318484", "1094005", "1137239", "1060426", "1080602", "1263994", "1301843", "1074433", "1195933", "799167", "1140414", "863894", "55135", "1036262", "890394", "25354", "1135971", "1398805", "896726", "701288", "791963", "930420", "1161728", "800457", "869986", "1375576", "1065860", "1092289", "749647", "1002135", "277509", "3545", "1062292", "790024", "1336644", "1254595", "824142", "912750", "1305168", "81318", "1098482", "1132651", "830122", "313716", "931948", "105418", "1014507", "1388982", "38188", "792977", "1071840", "894239", "82628", "719739", "1029023", "85535", "1401564", "69671", "33002", "865754", "1259550", "103595", "1073349", "55242", "836412", "1041368", "1492658", "866273", "1023362", "1483830", "1099305", "1284940", "1390478", "707549", "720858", "874396", "794685", "216851", "864839", "1417754", "932111", "23795", "798359", "805305", "726435", "946673", "1139463", "891293", "1399250", "1035201", "82020", "1331745", "1021604", "75659", "878088", "104918", "350852", "1354327", "1120970", "1334933", "356130", "819913", "1223112", "930828", "18748", "835011", "1388141", "884461", "916618", "919808", "918686", "8 78929", "1072725", "854560", "864415", "780127", "1086222", "798528", "1142576", "1084717", "1406666", "34956", "914122", "792013", "1285890", "39311", "880117", "821995", "904978", "920522", "1045309", "820318", "1413263", "77159", "1323206", "1166789", "745651", "95052", "95052", "725363", "1366367", "57055", "929545", "931584", "1005210", "1357642", "1057689", "791907", "1325159", "706698", "1137204", "69633", "1038074", "1077428", "1077428", "1443388", "875657", "884624", "1069530", "1521168", "1509228", "1023024", "730000", "861865", "864749", "1000045", "1288750", "760498", "1325279", "1465740", "1465740", "356309", "1059131", "2178", "751978", "1362468", "1101020", "1104855", "897077", "1019695", "1043337", "54441", "357301", "1424030", "1022321", "1077688", "1097149", "731657", "1084580", "1131903", "923139", "865917", "1162324", "1487101", "1031316", "907649", "1076930", "793524", "930803", "1141263", "1002388", "874866", "1054833", "1105841", "74260", "821483", "786035", "76267", "863456", "711377", "39273", "754811", "826735", "809173", "12978", "1125376", "356171", "1112920", "1326059", "719413", "46080", "1018164", "1041024", "1100441", "1326807", "717538", "102752", "784011", "65770", "37008", "1317945", "67887", "1057706", "795266", "1034755", "104889", "1065696", "858707", "1023459", "812090", "944695", "1327364", "1470683", "712537", "1072627", "19612", "1413507", "1165002", "1109553", "1037038", "1099290", "30125", "65172"]
  ROMEO_CIKS = ["1001082", "897429", "812011", "1080709", "1084755", "1103345", "826675", "25475", "1394954", "1394954", "903651", "1011657", "216539", "1067837", "63276", "59255", "72162", "850141", "1047335", "217346", "1517650", "874214", "1113256", "872912", "1141719", "945436", "1267130", "906553", "18396", "6314", "106640", "1141982", "351569", "716643", "320335", "215419", "716314", "760326", "887343", "1408198", "1001606", "28823", "859139", "59558", "50104", "1158172", "814453", "716133", "775368", "1275014", "1021561", "32166", "935226", "808450", "54507", "784199", "1403853", "876437", "1052100", "1101239", "1467076", "750556", "1096142", "350563", "73756", "1101215", "1055454", "1088033", "887497", "34903", "1424454", "827054", "891456", "1069258", "740694", "906163", "912463", "941138", "14693", "14693", "1302028", "754673", "1126975", "1126741", "1323468", "890926", "934549", "1081078", "1449801", "890465", "844965", "1144320", "1162556", "356213", "19446", "879526", "1208208", "890491", "765207", "1007587", "1057379", "1127703", "872835", "924822", "319654", "1002910", "721683", "1137411", "792985", "1173204", "1156388", "1144980", "7536", "1157647", "38067", "1133311", "1057791", "1471265", "1309108", "801337", "2488", "1136869", "1403431", "1289788", "1000623", "1000623", "717720", "11544", "1169445", "277595", "353944", "70145", "852772", "1403385", "874977", "1037646", "1042893", "17843", "72444", "91142", "720002", "55772", "1090425", "57131", "812074", "1369817", "278130", "1052054", "32689", "831641", "896841", "3197", "776867", "1057352", "833320", "1471261", "225263", "1357615", "707179", "102212", "1275229", "949373", "28412", "1333493", "1108426", "34782", "1068796", "931148", "1372041", "1159297", "1230245", "1042187", "768835", "1121788", "783325", "1126328", "1051512", "54480", "1391390", "915913", "784977", "1289340", "1224608", "1056087", "931336", "1232524", "723125", "861884", "1026650", "5768", "814184", "1241199", "746598", "354707", "939930", "1010552", "1219120", "825345", "1162027", "1080720", "1319869", "708819", "820081", "1003124", "922864", "66756", "89800", "795551", "874015", "79716", "729237", "1337885", "804212", "92380", "700564", "1085706", "1013934", "69680", "78239", "712770", "1116463", "914475", "39047", "920527", "778734", "1498301", "1005229", "99780", "1030484", "896622", "925645", "813920", "1098277", "1011570", "1031107", "49600", "1020416", "23197", "1261166", "895419", "1091907", "918386", "8858", "28367", "773141", "913443", "1344980", "1086600", "1043382", "825313", "9984", "1415020", "1293613", "835324", "1044590", "861459", "907562", "1457543", "29644", "886744", "57515", "850429", "782842", "1057877", "914156", "806517", "1057058", "31235", "73124", "1036960", "60977", "28917", "1143513", "1234006", "1058299", "861842", "1168696", "1055726", "103730", "1050797", "23111", "1101302", "807882", "788885", "1063254", "88941", "34067", "67215", "912603", "912603", "1070423", "1497770", "1481506", "1481506", "1018281", "1289419", "730255", "1326380", "230498", "72331", "886035", "1043533", "1005284", "1138951", "1121484", "1001385", "1487952", "1120295", "1322505", "75252", "97517", "1409171", "1029299", "817473", "1423689", "65433", "883943", "12208", "880804", "1311370", "1180145", "719866", "97216", "860748", "850209", "105634", "1055160", "14846", "1066134", "1316360", "876167", "1094831", "1054579", "91576", "790705", "1104657", "1046995", "703360", "36146", "882184", "102729", "1321741", "1022671", "16058", "1010286", "316793", "85974", "39899", "783280", "1025996", "921768", "921847", "889348", "97854", "63754", "1056285", "1293593", "1075880", "1090514", "1375365", "1111817", "50725", "57528", "1050743"]

  def to_s
    "#{contact_name.try(:strip)} (#{company_name.try(:strip)})"
  end

  def cik
    "0000000000#{raw_cik}"[-10..-1]
  end

  def time_zone_offset
    self.time_zone && self.time_zone[/([+|-]\d+)/, 1].try(:to_i)
  end

  # based on the events, return a score.
  def calculate_priority
    chronological_call_events = self.call_events.order("created_at DESC, id DESC").all # preload all call events
    chronological_email_events = self.email_events.order("created_at DESC, id DESC").all # preload all email events

    return 0 if chronological_call_events.any? { |e| e.type == Event::Call::NOT_INTERESTED }

    priority = 0

    # if there is a callback today or in the past without a call event afterwards...
    if callback_later_event = chronological_call_events.select { |e| e.type == Event::Call::CALLBACK_LATER }.detect { |e| e.follow_up && e.follow_up.to_date <= Time.now.utc.to_date } and callback_later_event == chronological_call_events.first
      priority += 100
    end

    # if you clicked on an email, prospect is high priority until they are contacted
    most_recent_call_event = chronological_call_events.first
    most_recent_click_event = self.email_events.detect { |e| e.type == Event::Email::CLICKED }
    if most_recent_click_event && (most_recent_call_event.nil? || most_recent_call_event.created_at < most_recent_click_event.created_at)
      priority += 90
    end

    # compare padded for padded
    if ROMEO_CIKS.include?(self.raw_cik.to_s)
      priority += 50
    end

    # if two weeks pass since they requested an email, without calling back
    priority += 10 if chronological_call_events.select { |e| e.type == Event::Call::REQUESTED_EMAIL }.detect { |e| 14.days.ago >= e.created_at }

    # if it has been 1 month or more since we left a voicemail
    priority += 1 if chronological_call_events.select { |e| e.type == Event::Call::VOICEMAIL }.detect { |e| 3.month.ago >= e.created_at }
    # priority += 1 if chronological_call_events.any?

    # if it has been less than 1 month since we left a voicemail, decrease priority so new prospects are higher
    priority -= 1 if chronological_call_events.select { |e| e.type == Event::Call::VOICEMAIL }.detect { |e| 3.month.ago < e.created_at }

    priority
  end
end
